<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sageassistant.dao.StockMapper">
	<!--Open L2 Cache under Names pace: 1 Hour-->
	<cache eviction="LRU" flushInterval="3600000" readOnly="true" size="1024"/>
	<select id="checkPN" parameterType="String" resultType="java.lang.String">
		SELECT TOP 1
			ITMMASTER.ITMREF_0
		FROM
			ITMMASTER
		WHERE ITMMASTER.ITMREF_0=#{pnRoot}
	</select>
	<select id="findStockQty" parameterType="String" resultType="java.lang.String">
		SELECT 
			SUM(STOCK.QTYSTU_0) AS QTY
		FROM
			STOCK
		WHERE
			STOCK.ITMREF_0=#{pnRoot}
			AND STOCK.STOFCY_0=#{Site}
	</select>
	<select id="findStockOptionPN" parameterType="String" resultType="java.lang.String">
		SELECT
			STUFF((SELECT DISTINCT ';' + T0.OptionPN FROM (
			SELECT 
				ITMREFBPS_0 AS OptionPN
			FROM ITMBPS
			WHERE
				ITMREF_0 !=ITMREFBPS_0 AND
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ITMREF_0,',',''),'.',''),'-',''),'_',''),'\',''),'/',''),' ','')=#{pnRoot}
			
			UNION
			SELECT 
				ITMREF_0 AS OptionPN
			FROM ITMBPS
			WHERE 
				ITMREF_0 !=ITMREFBPS_0 AND
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ITMREFBPS_0,',',''),'.',''),'-',''),'_',''),'\',''),'/',''),' ','')=#{pnRoot}
			
			UNION
			SELECT
				T2.ITMREFBPS_0 AS OptionPN
			FROM
				ITMBPS T1
			INNER JOIN ITMBPS T2
				ON T1.ITMREF_0 = T2.ITMREF_0
			WHERE 
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(T1.ITMREFBPS_0,',',''),'.',''),'-',''),'_',''),'\',''),'/',''),' ','') = #{pnRoot} AND
				REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(T2.ITMREFBPS_0,',',''),'.',''),'-',''),'_',''),'\',''),'/',''),' ','') != #{pnRoot}
			) T0
			FOR XML PATH('')),1,1,'') AS OptionPN
	</select>
	<select id="findStockInfoByPnRoot" parameterType="String" resultType="sageassistant.model.StockInfo">
		SELECT 
			STOCK.STOFCY_0 AS StockSite,
			STOCK.ITMREF_0 AS PN,
			COUNT(STOCK.QTYSTU_0) AS QTY
		FROM EXPLOIT.STOCK
			LEFT JOIN EXPLOIT.ITMMASTER
			ON ITMMASTER.ITMREF_0=STOCK.ITMREF_0
		WHERE 
			ITMMASTER.ITMREF_0=#{pnRoot}
		GROUP BY STOCK.STOFCY_0,
				STOCK.ITMREF_0
	</select>
	<select id="findStockSummaryBySite" parameterType="String" resultType="sageassistant.model.StockSummary">
		SELECT DISTINCT
			LEFT(ITMMASTER.TSICOD_0,1) AS G,
			LEFT(ITMMASTER.ITMREF_0,1) AS A,
			STOCK.LOC_0 AS Location,
			STOCK.ITMREF_0 AS PN,
			ITMMASTER.ITMDES1_0 + IIF(ITMMASTER.ITMDES2_0!='',' ' +ITMMASTER.ITMDES2_0,'') +IIF(ITMMASTER.ITMDES3_0!='',' ' +ITMMASTER.ITMDES3_0,'')  AS Description,
			STUFF((SELECT DISTINCT ';' + T0.OptionPN
				FROM (
					SELECT 
						ITMBPS.ITMREFBPS_0 AS OptionPN
					FROM ITMBPS
					WHERE 
						ITMBPS.ITMREF_0=STOCK.ITMREF_0
						AND ITMBPS.ITMREF_0 !=ITMBPS.ITMREFBPS_0

					UNION
					SELECT 
						ITMBPS.ITMREF_0 AS OptionPN
					FROM ITMBPS
					WHERE 
						ITMBPS.ITMREFBPS_0=STOCK.ITMREF_0
						AND ITMBPS.ITMREF_0 !=ITMBPS.ITMREFBPS_0

					UNION
					SELECT
						T2.ITMREFBPS_0 AS OptionPN
					FROM
						ITMBPS T1
					INNER JOIN ITMBPS T2
						ON T1.ITMREF_0 = T2.ITMREF_0
					WHERE 
						T1.ITMREFBPS_0 = STOCK.ITMREF_0
						AND T2.ITMREFBPS_0 != STOCK.ITMREF_0
				) AS T0 
			FOR XML PATH('')),1,1,'') AS OptionPN,
			SUM(STOCK.QTYSTU_0) OVER (PARTITION BY STOCK.STOFCY_0,STOCK.ITMREF_0 ) AS Qty,
			SUM(STOCOST.CST_0) OVER (PARTITION BY STOCK.STOFCY_0,STOCK.ITMREF_0 ) AS Cost
		FROM STOCK
		LEFT JOIN ITMMASTER
			ON ITMMASTER.ITMREF_0 = STOCK.ITMREF_0
		LEFT JOIN STOCOST
			ON STOCOST.ITMREF_0 = STOCK.ITMREF_0
		WHERE
			STOCK.STOFCY_0=#{Site}
			AND STOCOST.STOFCY_0=#{Site}
		ORDER BY PN
	</select>
	<!-- STOJOU.VCRTYPREG_0 0:无， 6: Receive 10: workorder 17: Supplier Invoice -->
	<select id="findStockHistoryBySite" parameterType="String" resultType="sageassistant.model.StockHistory">
		SELECT DISTINCT
			STOJOU.LOC_0 AS Location,
			STOJOU.CSTCOU_0 AS Seq,
			STOJOU.ITMREF_0 AS PN,
			ITMMASTER.ITMDES1_0 + IIF(ITMMASTER.ITMDES2_0='','',' '+ITMMASTER.ITMDES2_0) + IIF(ITMMASTER.ITMDES3_0='','',' '+ITMMASTER.ITMDES3_0) AS Description,
			STOJOU.QTYSTU_0 AS Qty,
			STOJOU.STU_0 AS Unit,
			STOJOU.AMTVAL_0 AS Cost,
			STOJOU.PJT_0 AS ProjectNO,
			STOJOU.VCRNUMORI_0 AS SourceNO,
			STOJOU.VCRLINORI_0 AS SourceLine,
			STOJOU.VCRNUM_0 AS EntryNO,
			STOJOU.VCRLIN_0 AS EntryLine,
			STOJOU.CREUSR_0 AS CreateUser,
			STOJOU.CREDAT_0 AS CreateDate
		FROM 
			STOJOU 
		LEFT JOIN ITMMASTER
			ON ITMMASTER.ITMREF_0 = STOJOU.ITMREF_0
		WHERE
			STOJOU.STOFCY_0=#{Site}
			AND (STOJOU.CREDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
			<if test = " PnOrName != '%%' ">
			AND
			(
			ITMMASTER.ITMDES1_0 LIKE #{PnOrName} OR
			ITMMASTER.ITMDES2_0 LIKE #{PnOrName} OR
			ITMMASTER.ITMDES2_0 LIKE #{PnOrName} OR
			STOJOU.ITMREF_0 LIKE #{PnOrName}
			)
			</if>
			AND STOJOU.VCRTYPREG_0 != 17
		ORDER BY STOJOU.CREDAT_0 DESC
	</select>

</mapper>