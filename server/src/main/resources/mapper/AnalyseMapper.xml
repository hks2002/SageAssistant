<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sageassistant.dao.AnalyseMapper">
	<!--Open L2 Cache under Names pace: 1 Hour -->
	<cache eviction="FIFO" flushInterval="3600000" readOnly="true" size="102400" />

	<select id="analyseQuoteSalesCost" resultType="sageassistant.model.AnalyseQuoteSalesCost">
		WITH
		Currency AS (
			SELECT 
				CUR_0 AS Sour,
				CURDEN_0 AS Dest,
				CHGRAT_0 AS Rate,
				CHGSTRDAT_0 AS StartDate,
				LEAD(CHGSTRDAT_0,1,GETDATE()) OVER (PARTITION BY CUR_0,CURDEN_0 ORDER BY CHGSTRDAT_0 ASC) AS EndDate
			FROM EXPLOIT.TABCHANGE 
			WHERE CURDEN_0 = 'USD'
		),

		Quote AS (
		SELECT *
		FROM (
			SELECT 
				T1.PN,
				T1.Site,
				T1.Description,
				T1.QCnt,
				T1.QQty,
				'LastQPrice' + cast(T1.ROWNUM as varchar(4)) LastQPrice,
				T1.USD,
				MIN(T1.USD) OVER (PARTITION BY T1.PN) AS MinQPrice,
				AVG(T1.USD) OVER (PARTITION BY T1.PN) AS AvgQPrice,
				MAX(T1.USD) OVER (PARTITION BY T1.PN) AS MaxQPrice
			FROM (
				SELECT 
					SQUOTED.ITMREF_0 AS PN,
					SQUOTED.SALFCY_0 AS Site,
					IIF(ITMMASTER.ITMDES2_0 !='',ITMMASTER.ITMDES1_0+' '+ITMMASTER.ITMDES2_0,ITMMASTER.ITMDES1_0) AS Description,
					COUNT(0) OVER (PARTITION BY SQUOTED.ITMREF_0) AS QCnt,
					SUM(SQUOTED.QTY_0) OVER (PARTITION BY SQUOTED.ITMREF_0) AS QQty,
					SQUOTED.NETPRI_0 * Currency.Rate AS USD,
					ROW_NUMBER() OVER (PARTITION BY SQUOTED.ITMREF_0 ORDER BY SQUOTED.QUODAT_0 DESC) AS ROWNUM
				FROM EXPLOIT.SQUOTE SQUOTE
					LEFT JOIN EXPLOIT.SQUOTED SQUOTED 
						ON SQUOTED.SQHNUM_0 = SQUOTE.SQHNUM_0
					LEFT JOIN EXPLOIT.ITMMASTER ITMMASTER 
						ON SQUOTED.ITMREF_0 = ITMMASTER.ITMREF_0
					INNER JOIN Currency
						ON Currency.Sour =  SQUOTE.CUR_0
							AND Currency.Dest='USD'
							AND SQUOTED.CREDAT_0 >= Currency.StartDate
							AND Currency.EndDate > SQUOTED.CREDAT_0
				WHERE SQUOTED.NETPRI_0 > 0
		<if test="CategoryCode != null and CategoryCode != ''">
						AND ITMMASTER.TSICOD_1 LIKE #{CategoryCode}
		</if>
		<if test="PnRoot != null and PnRoot != ''">
						AND ITMMASTER.ITMREF_0 = #{PnRoot}
		</if>
		AND SQUOTE.SALFCY_0 = #{Site}
						AND SQUOTED.SALFCY_0 = #{Site}
						AND (SQUOTE.QUODAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
						AND (SQUOTED.QUODAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
			) AS T1	-- T1 Change Price to USD
			WHERE #{Limit} >= T1.ROWNUM  -- change the number, and below LastQPN
		) AS T2 -- T2 for PIVOT
		PIVOT ( MAX(USD) FOR LastQPrice IN (LastQPrice1,LastQPrice2,LastQPrice3,LastQPrice4,LastQPrice5,LastQPrice6,LastQPrice7,LastQPrice8,LastQPrice9,LastQPrice10) ) AS TPQP
		),

		Sales AS (
		SELECT *
		FROM (
			SELECT 
				T1.PN AS SPN,
				T1.SCnt,
				T1.SQty,
				'LastSPrice' + cast(T1.ROWNUM as varchar(4)) LastSPrice,
				T1.USD,
				MIN(T1.USD) OVER (PARTITION BY T1.PN) AS MinSPrice,
				AVG(T1.USD) OVER (PARTITION BY T1.PN) AS AvgSPrice,
				MAX(T1.USD) OVER (PARTITION BY T1.PN) AS MaxSPrice
			FROM (
				SELECT 
					SORDERQ.ITMREF_0 AS PN,
					COUNT(0) OVER (PARTITION BY SORDERQ.ITMREF_0) AS SCnt,
					SUM(SORDERQ.QTY_0) OVER (PARTITION BY SORDERQ.ITMREF_0) AS SQty,
					SORDERP.NETPRI_0 * Currency.Rate AS USD,
					ROW_NUMBER() OVER (PARTITION BY ITMMASTER.ITMREF_0 ORDER BY SORDERP.CREDAT_0 DESC) AS ROWNUM
				FROM EXPLOIT.SORDER SORDER
					LEFT JOIN  EXPLOIT.SORDERQ SORDERQ
						ON SORDER.SOHNUM_0 = SORDERQ.SOHNUM_0
					LEFT JOIN  EXPLOIT.SORDERP SORDERP
						ON SORDERQ.SOHNUM_0 = SORDERP.SOHNUM_0
						AND SORDERQ.SOPLIN_0 = SORDERP.SOPLIN_0
					LEFT JOIN EXPLOIT.ITMMASTER ITMMASTER
						ON SORDERQ.ITMREF_0 = ITMMASTER.ITMREF_0
					INNER JOIN Currency
						ON Currency.Sour =  SORDER.CUR_0
							AND Currency.Dest='USD'
							AND SORDERP.CREDAT_0 >= Currency.StartDate
							AND Currency.EndDate > SORDERP.CREDAT_0
				WHERE SORDERP.NETPRI_0 > 0
		<if test="CategoryCode != null and CategoryCode != ''">
						AND ITMMASTER.TSICOD_1 LIKE #{CategoryCode}
		</if>
		<if test="PnRoot != null and PnRoot != ''">
						AND ITMMASTER.ITMREF_0 = #{PnRoot}
		</if>
		AND SORDER.SALFCY_0 = #{Site}
						AND SORDERQ.SALFCY_0 = #{Site}
						AND SORDERP.SALFCY_0 = #{Site}
						AND (SORDER.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
						AND (SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
			) AS T1	-- T1 Change Price to USD
			WHERE #{Limit}>=T1.ROWNUM -- change the number, and below LastSPN
		) AS T2 -- T2 for PIVOT
		PIVOT ( MAX(USD) FOR LastSPrice IN (LastSPrice1,LastSPrice2,LastSPrice3,LastSPrice4,LastSPrice5,LastSPrice6,LastSPrice7,LastSPrice8,LastSPrice9,LastSPrice10) ) AS TPSP
		),

	SalesPJT AS (
	SELECT *
	FROM (
		SELECT 
			T1.PN AS SPJTPN,
			'LastPJT' + cast(T1.ROWNUM as varchar(4)) LastPJT,
			T1.ProjectNO
		FROM (
			SELECT 
				SORDERQ.ITMREF_0 AS PN,
				SORDER.SALFCY_0 AS Site,
				SORDERQ.YSOH_PJT_0 AS ProjectNO,
				ROW_NUMBER() OVER (PARTITION BY ITMMASTER.ITMREF_0 ORDER BY SORDERP.CREDAT_0 DESC) AS ROWNUM
			FROM EXPLOIT.SORDER SORDER
				LEFT JOIN  EXPLOIT.SORDERQ SORDERQ
					ON SORDER.SOHNUM_0 = SORDERQ.SOHNUM_0
				LEFT JOIN  EXPLOIT.SORDERP SORDERP
					ON SORDERQ.SOHNUM_0 = SORDERP.SOHNUM_0
					AND SORDERQ.SOPLIN_0 = SORDERP.SOPLIN_0
				LEFT JOIN EXPLOIT.ITMMASTER ITMMASTER
					ON SORDERQ.ITMREF_0 = ITMMASTER.ITMREF_0
			WHERE SORDERP.NETPRI_0 > 0
		<if test="CategoryCode != null and CategoryCode != ''">
					AND ITMMASTER.TSICOD_1 LIKE #{CategoryCode}
				</if>
		<if test="PnRoot != null and PnRoot != ''">
					AND ITMMASTER.ITMREF_0 = #{PnRoot}
				</if>
		AND SORDER.SALFCY_0 = #{Site}
				AND SORDERQ.SALFCY_0 = #{Site}
				AND SORDERP.SALFCY_0 = #{Site}
				AND (SORDER.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
				AND (SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
				) AS T1	-- T1 Change Price to USD
		WHERE #{Limit}>=T1.ROWNUM  -- change the number, and below LastSPN
	) AS T2 -- T2 for PIVOT
	PIVOT ( MAX(ProjectNO) FOR LastPJT IN (LastPJT1,LastPJT2,LastPJT3,LastPJT4,LastPJT5,LastPJT6,LastPJT7,LastPJT8,LastPJT9,LastPJT10) ) AS TPPJT
	),

	ProjectCost AS (
	SELECT *
	FROM (
	   SELECT
		 T2.PN AS PJTCPN,
		 --T2.ROWNUM,
		 --T2.ProjectNO,
		 T2.Cost,
		 'LastCost' + cast(T2.ROWNUM as varchar(4)) LastCost
		 FROM (
			SELECT DISTINCT
			 T1.PN,
			 T1.ProjectNO,
			 SUM(T1.USD) OVER (PARTITION BY T1.ProjectNO ) AS Cost,
			 ROW_NUMBER() OVER (PARTITION BY T1.PN ORDER BY T1.CREDAT_0 DESC) AS ROWNUM
			FROM (
				SELECT DISTINCT
					SORDERQ.ITMREF_0 AS PN,
					PORDERP.PJT_0 AS ProjectNO,
					PORDER.CUR_0 AS Currency,
					SUM(PORDERP.NETPRI_0 * Currency.Rate) OVER (PARTITION BY PORDERP.PRHFCY_0, PORDERP.PJT_0, PORDER.CUR_0 ) AS USD,
					SORDERQ.CREDAT_0
				FROM EXPLOIT.PORDER PORDER
					 LEFT JOIN EXPLOIT.PORDERP PORDERP
						ON PORDER.POHNUM_0 = PORDERP.POHNUM_0
					 LEFT JOIN EXPLOIT.SORDERQ SORDERQ
						ON SORDERQ.YSOH_PJT_0 = PORDERP.PJT_0
					 LEFT JOIN EXPLOIT.ITMMASTER ITMMASTER
						ON SORDERQ.ITMREF_0 = ITMMASTER.ITMREF_0
					 INNER JOIN Currency
						ON Currency.Sour =  PORDER.CUR_0
							AND Currency.Dest='USD'
							AND PORDERP.CREDAT_0 >= Currency.StartDate
							AND Currency.EndDate > PORDERP.CREDAT_0
				WHERE 1=1
		<if test="CategoryCode != null and CategoryCode != ''">
						AND ITMMASTER.TSICOD_1 LIKE #{CategoryCode}
		</if>
		<if test="PnRoot != null and PnRoot != ''">
						AND ITMMASTER.ITMREF_0 = #{PnRoot}
		</if>
		AND PORDER.POHFCY_0 = #{Site}
					AND PORDERP.PRHFCY_0 = #{Site}
					AND SORDERQ.SALFCY_0 = #{Site}
					AND (SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom},120) AND CONVERT(datetime, #{DateTo},120) )
			) AS T1  -- multi currency 
		) AS T2  -- summaried to USD by projectNO
		WHERE #{Limit}>=T2.ROWNUM	-- change the number, and below LastSPN
	) AS T3 -- T3 for PIVOT
	PIVOT ( MAX(Cost) FOR LastCost IN (LastCost1,LastCost2,LastCost3,LastCost4,LastCost5,LastCost6,LastCost7,LastCost8,LastCost9,LastCost10) ) AS TPCOST
	)
	
	SELECT DISTINCT 
		Quote.*,
		Sales.*,
		SalesPJT.*,
		ProjectCost.*
	FROM Quote
	LEFT JOIN Sales
		ON Sales.SPN = Quote.PN
	LEFT JOIN SalesPJT
		ON SalesPJT.SPJTPN = Quote.PN
	LEFT JOIN ProjectCost
		ON ProjectCost.PJTCPN = Quote.PN
	</select>
	<select id="analysePurchase" resultType="sageassistant.model.AnalysePurchase">
	WITH
		Currency AS (
				SELECT 
					CUR_0 AS Sour,
					CURDEN_0 AS Dest,
					CHGRAT_0 AS Rate,
					CHGSTRDAT_0 AS StartDate,
					LEAD(CHGSTRDAT_0,1,GETDATE()) OVER (PARTITION BY CUR_0,CURDEN_0 ORDER BY CHGSTRDAT_0 ASC) AS EndDate
				FROM EXPLOIT.TABCHANGE 
				WHERE CURDEN_0 = #{Currency}
		),
		ProjectCost AS ( 
		SELECT DISTINCT
			PORDERP.PJT_0 AS ProjectNO,
			PORDERQ.POHNUM_0 AS PurchaseNO,
			-- Maybe Multi Purchase
			SUM(PORDERP.NETPRI_0) OVER (PARTITION BY PORDERP.PJT_0,PORDERP.POHNUM_0)*Currency.Rate AS NetPrice,
			PORDERQ.CREDAT_0 AS PurchaseDate
		FROM EXPLOIT.PORDERQ PORDERQ
				INNER JOIN EXPLOIT.PORDERP PORDERP
					ON PORDERQ.POHNUM_0 = PORDERP.POHNUM_0 
						AND PORDERQ.POPLIN_0 = PORDERP.POPLIN_0
				INNER JOIN SORDERQ
					ON SORDERQ.YSOH_PJT_0 = PORDERP.PJT_0
							OR SORDERQ.YSOQ_PJTORI_0 = PORDERP.PJT_0
				INNER JOIN Currency
					ON Currency.Sour =  PORDERQ.NETCUR_0
						AND Currency.Dest= #{Currency}
						AND PORDERQ.CREDAT_0 >= Currency.StartDate
						AND Currency.EndDate > PORDERQ.CREDAT_0
		WHERE
			PORDERQ.POHFCY_0 = #{Site}
			AND PORDERP.PRHFCY_0 = #{Site}
			AND SORDERQ.ITMREF_0 = #{PnRoot}
				AND SORDERQ.SALFCY_0 = #{Site}
		)

		SELECT * FROM (
			SELECT	DISTINCT
				ProjectCost.ProjectNO,
				ProjectCost.PurchaseNO,
				SUM(ProjectCost.NetPrice) OVER (PARTITION BY ProjectCost.ProjectNO)	AS NetPrice,
				ProjectCost.PurchaseDate AS  PurchaseDate,
				SORDERQ.CREDAT_0 AS ProjectDate,
				DENSE_RANK() OVER (ORDER BY SORDERQ.CREDAT_0 DESC, ProjectCost.ProjectNO DESC) AS ROWNUM
			FROM SORDERQ
			INNER JOIN ProjectCost
					ON SORDERQ.YSOH_PJT_0 = ProjectCost.ProjectNO
					OR SORDERQ.YSOQ_PJTORI_0 = ProjectCost.ProjectNO
			WHERE SORDERQ.ITMREF_0 = #{PnRoot}
				AND SORDERQ.SALFCY_0 = #{Site}
		) AS T1
		WHERE T1.ROWNUM = #{LastN}
	</select>
	<select id="analyseQuote" resultType="sageassistant.model.AnalyseQuote">
	WITH
	Currency AS (
			SELECT 
				CUR_0 AS Sour,
				CURDEN_0 AS Dest,
				CHGRAT_0 AS Rate,
				CHGSTRDAT_0 AS StartDate,
				LEAD(CHGSTRDAT_0,1,GETDATE()) OVER (PARTITION BY CUR_0,CURDEN_0 ORDER BY CHGSTRDAT_0 ASC) AS EndDate
			FROM EXPLOIT.TABCHANGE 
			WHERE CURDEN_0 = #{Currency}
	),
	Quote AS (
	SELECT DISTINCT
		SQUOTED.SQHNUM_0 AS QuoteNO,
		SQUOTED.QUODAT_0 AS QuoteDate,
		SQUOTE.BPCORD_0 AS CustomerCode,
		SQUOTE.BPCNAM_0 AS CustomerName,
		SQUOTED.QTY_0 AS QTY,
		SQUOTED.NETPRI_0*Currency.Rate AS NetPrice,
		SQUOTED.ORDFLG_0 AS OrderFlag,
		SQUOTED.SOHNUM_0 AS OrderNO,
		DENSE_RANK() OVER (ORDER BY SQUOTED.CREDAT_0 DESC, SQUOTED.SQHNUM_0 DESC) AS ROWNUM
	FROM SQUOTE
	LEFT JOIN SQUOTED
		ON SQUOTED.SQHNUM_0=SQUOTE.SQHNUM_0
	INNER JOIN Currency
	ON Currency.Sour =  SQUOTE.CUR_0
			AND Currency.Dest=#{Currency}
			AND SQUOTED.CREDAT_0 >= Currency.StartDate
			AND Currency.EndDate > SQUOTED.CREDAT_0
	WHERE 
		SQUOTED.NETPRI_0 > 0
		AND SQUOTED.ITMREF_0 = #{PnRoot}
		AND SQUOTED.SALFCY_0 = #{Site}
		AND SQUOTE.SALFCY_0 = #{Site}
	)
	
	SELECT * FROM Quote
	WHERE Quote.ROWNUM = #{LastN}
	</select>
	<select id="analyseSales" resultType="sageassistant.model.AnalyseSales">
	WITH
	Currency AS (
			SELECT 
				CUR_0 AS Sour,
				CURDEN_0 AS Dest,
				CHGRAT_0 AS Rate,
				CHGSTRDAT_0 AS StartDate,
				LEAD(CHGSTRDAT_0,1,GETDATE()) OVER (PARTITION BY CUR_0,CURDEN_0 ORDER BY CHGSTRDAT_0 ASC) AS EndDate
			FROM EXPLOIT.TABCHANGE 
			WHERE CURDEN_0 = #{Currency}
	),
	Sales AS (
	SELECT DISTINCT
			SORDERP.SOHNUM_0 AS OrderNO,
			SORDER.ORDDAT_0 AS OrderDate,
			SORDER.BPCORD_0 AS CustomerCode,
			SORDER.BPCNAM_0 AS CustomerName,
			SORDERQ.QTY_0 AS QTY,
			SORDERP.NETPRI_0*Currency.Rate AS NetPrice,
			DENSE_RANK() OVER (ORDER BY SORDERQ.CREDAT_0 DESC, SORDERP.SOHNUM_0 DESC) AS ROWNUM
	FROM SORDER
		LEFT JOIN SORDERP
			ON SORDERP.SOHNUM_0 = SORDER.SOHNUM_0
		INNER JOIN SORDERQ
			ON SORDERQ.SOHNUM_0 = SORDERP.SOHNUM_0
				AND SORDERQ.SOPLIN_0 = SORDERP.SOPLIN_0
		INNER JOIN Currency
			ON Currency.Sour =  SORDER.CUR_0
				AND Currency.Dest= #{Currency}
				AND SORDERP.CREDAT_0 >= Currency.StartDate
				AND Currency.EndDate > SORDERP.CREDAT_0
	WHERE
		SORDERP.NETPRI_0 > 0
		AND SORDERP.ITMREF_0 = #{PnRoot}
		AND SORDERP.SALFCY_0 = #{Site}
		AND SORDERQ.SALFCY_0 = #{Site}
	)
	
	SELECT * FROM Sales
	WHERE Sales.ROWNUM = #{LastN}
	</select>


</mapper>